
name: C/C++ (Linux)

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  main:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-16.04 ]

        target: [ clang-9.0.0, clang-8.0.0, g++-9, g++-8 ]

        include:
          - { target: clang-9.0.0, compiler: clang, cxx-version: 9.0.0 }
          - { target: clang-8.0.0, compiler: clang, cxx-version: 8.0.0 }

          - { target: g++-9, compiler: g++, cxx-version: 9.3.0 }
          - { target: g++-8, compiler: g++, cxx-version: 8.4.0 }

    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2

    - name: sudo apt-get install valgrind -y
      run: sudo apt-get install valgrind -y


    - name: env DEFAULT_OPTIMIZATION=-O1 make test -j$(nproc)
      run: env DEFAULT_OPTIMIZATION=-O1 make test -j$(nproc)

    - name: make clean
      run: make clean

    - name: env DEFAULT_OPTIMIZATION=-O2 make test -j$(nproc)
      run: env DEFAULT_OPTIMIZATION=-O2 make test -j$(nproc)

    - name: make clean
      run: make clean

    - name: env DEFAULT_OPTIMIZATION=-O3 make test -j$(nproc)
      run: env DEFAULT_OPTIMIZATION=-O3 make test -j$(nproc)

    - name: env DEFAULT_OPTIMIZATION=-O3 make -j$(nproc)
      run: env DEFAULT_OPTIMIZATION=-O3 make -j$(nproc)

    ########################################
    #      Store generated artifacts       #
    ########################################
    - name: Store teavpn_server artifact
      uses: actions/upload-artifact@v2
      with:
        name: teavpn_server
        path: teavpn_server

    - name: Store teavpn_client artifact
      uses: actions/upload-artifact@v2
      with:
        name: teavpn_client
        path: teavpn_client

